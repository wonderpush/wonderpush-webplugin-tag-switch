/* See http://www.cssflow.com/snippets/simple-toggle-switch/demo/scss */
.wp-tag-switch {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  width: auto; /* can be ajusted from the element's inline style without problem */
  height: auto;
  padding: 0.2em;
  /*background-color: rgba(128, 128, 128, .5);*/
  border-radius: 1.25em; /* same as height */
  box-shadow: inset 0 -1px     rgba(0, 0, 0, .05),
              inset 0  1px 1px rgba(0, 0, 0, .05);
  cursor: pointer;
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, .2), rgba(255, 255, 255, .3) 1.5em);
}

.wp-tag-switch-input {
  display: none;
}

.wp-tag-switch-label {
  position: relative;
  display: block;
  height: 2em;
  font-size: 60%;
  text-transform: uppercase;
  background: #eceeef;
  border-radius: inherit;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, .12),
              inset 0 0   2px rgba(0, 0, 0, .15);
  transition: .15s ease-out;
  transition-property: opacity, background;
}

.wp-tag-switch-label:before,
.wp-tag-switch-label:after {
  line-height: 0; /* permits labels superposition */
  clear: both;    /* permits labels superposition */
  transition: inherit;
  white-space: nowrap;
  display: inline-block;
}

.wp-tag-switch-label:before {
  content: attr(data-off);
  right: 1em;
  color: #aaa;
  text-shadow: 0 1px rgba(255, 255, 255, .5);
  float: right;
  margin-top: 1em; /* pushes :after too */
  margin-right: 1em;
  margin-left: 2.5em;
}

.wp-tag-switch-label:after {
  content: attr(data-on);
  left: 1em;
  color: white;
  text-shadow: 0 1px rgba(0, 0, 0, .2);
  opacity: 0;
  float: left;
  margin-top: 0; /* already pushed by :before */
  margin-left: 1em;
  margin-right: 2.5em;
}

.wp-tag-switch-input:checked ~ .wp-tag-switch-label {
  background: #47a8d8;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, .15),
              inset 0 0 3px rgba(0, 0, 0, .2);
}

.wp-tag-switch-input:checked ~ .wp-tag-switch-label:before { opacity: 0; }
.wp-tag-switch-input:checked ~ .wp-tag-switch-label:after { opacity: 1; }

.wp-tag-switch-handle {
  position: absolute;
  top: .24em;
  left: .24em;
  width: 1.125em;
  height: 1.125em;
  background: white;
  border-radius: 100%;
  box-shadow: 1px 1px 5px rgba(0, 0, 0, .2);
  background-image: linear-gradient(to bottom, white 40%, #f0f0f0);
  transition: .15s ease-out;
  transition-property: left, margin-left;
}

.wp-tag-switch-handle:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  margin: .1875em 0 0 .1875em;
  width: .75em;
  height: .75em;
  background: #f9f9f9;
  border-radius: 100%;
  box-shadow: inset 0 1px rgba(0, 0, 0, .02);
  background-image: linear-gradient(to bottom, #eee, white);
}

.wp-tag-switch-input:checked ~ .wp-tag-switch-handle {
  left: 100%;
  margin-left: -1.365em; /* -(left+width) */
  box-shadow: -1px 1px 5px rgba(0, 0, 0, .2);
}

/*
 * Colors
 */

.wp-tag-switch-input:disabled ~ .wp-tag-switch-handle {
  background-image: linear-gradient(to bottom, #c0c0c0 40%, #808080);
}
.wp-tag-switch-input:disabled ~ .wp-tag-switch-handle:before {
  background: #b0b0b0;
}
.wp-tag-switch-input:disabled ~ .wp-tag-switch-label {
  background: #c0c0c0;
}
.wp-tag-switch-input:disabled ~ .wp-tag-switch-label:before {
  color: #eee;
}

.wp-tag-switch-off-gray > .wp-tag-switch-label {
  background: #eceeef;
}
.wp-tag-switch-off-gray > .wp-tag-switch-label:before {
  color: #aaa;
  text-shadow: 0 1px rgba(255, 255, 255, .5);
}
.wp-tag-switch-off-grey > .wp-tag-switch-label {
  background: #eceeef;
}
.wp-tag-switch-off-grey > .wp-tag-switch-label:before {
  color: #aaa;
  text-shadow: 0 1px rgba(255, 255, 255, .5);
}

.wp-tag-switch-off-red > .wp-tag-switch-label {
  background: #ed2121;
}
.wp-tag-switch-off-red > .wp-tag-switch-label:before {
  color: white;
  text-shadow: 0 1px rgba(0, 0, 0, .2);
}

.wp-tag-switch-on-green > .wp-tag-switch-input:checked ~ .wp-tag-switch-label {
  background: #4fb845;
  text-shadow: 0 1px rgba(0, 0, 0, .2);
}

.wp-tag-switch-on-blue > .wp-tag-switch-input:checked ~ .wp-tag-switch-label {
  background: #47a8d8;
  text-shadow: 0 1px rgba(0, 0, 0, .2);
}
